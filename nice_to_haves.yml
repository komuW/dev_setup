---
- hosts: all
  gather_facts: no
  sudo: yes
  sudo_user: "{{ANSIBLE_SSH_USER}}"

  vars_files:
    - ./vars/base.yml

  tasks:

    # - name: download popcorntime io
    #   get_url: >
    #     url=http://mirror11.ptn.sh/build/Popcorn-Time-0.3.8-5-Linux-64.tar.xz
    #     dest=/tmp

    # - name: create popcorntime extract directory
    #   shell: mkdir -p poptime chdir=/tmp

    # - name: untar popcorntime
    #   shell: tar -xJf Popcorn-Time-0.3.8-5-Linux-64.tar.xz --directory=/tmp/poptime chdir=/tmp

    # - name: configure custom install popcorntime script(we dont like prompts. do we?)
    #   template: src=templates/install_popcorntime.sh.j2
    #             dest=/tmp/poptime/install_popcorntime.sh
    #   ignore_errors: yes

    # - name: install popcorntime
    #   shell: bash install_popcorntime.sh chdir=/tmp/poptime
    #   ignore_errors: yes

    - name: download vscode
      shell: sudo wget --directory-prefix=/tmp wget --directory-prefix=/tmp https://go.microsoft.com/fwlink/?LinkID=760868
      tags:
        - vscode

    - name: install vscode
      shell: sudo dpkg -i /tmp/index.html\?LinkID\=760868
      tags:
        - vscode
 
    - name: configure vscode user settings file
      template: src=templates/vscode_user_settings.j2
                dest=~/.config/Code/User/settings.json
      tags: 
        - vscode

    - name: check if atom editor is already downloaded
      stat: path=/tmp/atom-amd64.deb
      register: atom_file_exist
      tags: 
        - atom

    - name: download atom editor
      shell: sudo wget --directory-prefix=/tmp https://github.com/atom/atom/releases/download/{{ATOM_EDITOR_VERSION}}/atom-amd64.deb
      when: atom_file_exist.stat.exists == False
      tags: 
        - atom

    - name: install atom editor
      shell: sudo dpkg -i /tmp/atom-amd64.deb
      tags: 
        - atom

    - name: create atom dir
      shell: mkdir -p ~/.atom
      tags: 
        - atom

    - name: configure atom/config.cson
      template: src=templates/atom.config.cson.j2
                dest=~/.atom/config.cson
      tags: 
        - atom

    - name: install atom plugins/themes
      shell: apm install {{item}}
      with_items:
        - atom-dark-ui 
        - sub-monokai
        - monokai
      tags:
        - atom

    - name: install castnow terminal chromecast player
      shell: npm install castnow -g
      ignore_errors: yes
      tags:
        - chromecast
    
    - name: install xonsh and dependencies
      shell: python3 -m pip install -U xonsh ptk prompt_toolkit pygments
      become: yes
      become_user: root
      tags: 
        - xonsh

    - name: create xonsh file
      shell: mkdir -p ~/.config/xonsh && touch ~/.config/xonsh/config.json
      tags:
        - xonsh

    - name: configure xonsh.config.json.j2
      template: src=templates/xonsh.config.json.j2
                dest=~/.config/xonsh/config.json
      tags: 
        - xonsh

    - name: add xonsh to shells
      lineinfile: line="/usr/local/bin/xonsh"
                  backup=yes
                  dest=/etc/shells
      become: yes
      become_user: root
 
    - name: activate xonsh shell
      shell: chsh -s $(which xonsh)
      become: yes
      become_user: root
 
    - name: update
      shell: sudo apt-get -y update
      tags:
        - security

    - name: add security updates
      shell: sudo apt-get -y dist-upgrade
      tags:
        - security
