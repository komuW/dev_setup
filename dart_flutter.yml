---
- hosts: all
  gather_facts: no
  sudo: yes
  sudo_user: "{{ANSIBLE_SSH_USER}}"

  vars_files:
    - ./vars/base.yml

  tasks:

    - name: check if flutter is already downloaded
      stat: path=/usr/local/{{FLUTTER_VERSION}}.tar.xz
      register: flutter_file_exist
      tags:
        - install_flutter
        - flutter  

    - name: download flutter
      shell: sudo wget --directory-prefix=/usr/local https://storage.googleapis.com/flutter_infra/releases/beta/linux/{{FLUTTER_VERSION}}.tar.xz
      when: flutter_file_exist.stat.exists == False
      tags:
        - install_flutter
        - flutter

    - name: untar flutter file
      command: sudo tar xf /usr/local/{{FLUTTER_VERSION}}.tar.xz chdir=/usr/local/
      tags:
        - install_flutter
        - flutter

    - name: flutter profileI
      lineinfile: line="\n#flutter"
                  backup=yes
                  dest=/etc/profile
      sudo: yes
      sudo_user: root
      tags:
        - flutter

    - name: flutter profileII
      lineinfile: line="export PATH=$PATH:/usr/local/flutter/bin"
                  backup=yes
                  dest=/etc/profile
      sudo: yes
      sudo_user: root
      tags:
        - flutter

    - name: flutter bashrcI
      lineinfile: line="\n#flutter"
                  backup=yes
                  dest=~/.bashrc
      sudo: yes
      sudo_user: "{{ansible_ssh_user}}"
      tags:
        - flutter

    - name: flutter bashrcII
      lineinfile: line="export PATH=$PATH:/usr/local/flutter/bin"
                  backup=yes
                  dest=~/.bashrc
      sudo: yes
      sudo_user: "{{ansible_ssh_user}}"
      tags:
        - flutter

    - name: source profile
      shell: source /etc/profile
      sudo: no
      ignore_errors: yes
      args:
        executable: /bin/bash
      tags:
        - flutter

    - name: source bashrc
      shell: source ~/.bashrc
      sudo: no
      ignore_errors: yes
      args:
        executable: /bin/bash
      tags:
        - flutter

    - name: give {{ansible_ssh_user}} perms on flutter dir
      shell: chown -R {{ansible_ssh_user}} /usr/local/flutter
      sudo: yes
      sudo_user: "{{ansible_ssh_user}}"
      tags:
        - flutter

    - name: check flutter version
      shell: flutter --version
      sudo: no
      tags:
        - flutter

    - name: download android-studio
      shell: sudo wget -nc --directory-prefix=/usr/local https://dl.google.com/dl/android/studio/ide-zips/3.1.2.0/android-studio-ide-173.4720617-linux.zip
      tags:
        - install_flutter
        - flutter

    - name: unzip android-studio file
      command: sudo unzip /usr/local/android-studio-ide-173.4720617-linux.zip chdir=/usr/local/
      tags:
        - install_flutter
        - flutter

    - name: install kvm(useful for android emulator acceleration)
      shell: sudo apt -y update; sudo apt -y install qemu-kvm libvirt-bin ubuntu-vm-builder bridge-utils
      tags:
        - install_flutter
        - flutter

    - name: verify kvm install
      shell: virsh list --all
      tags:
        - install_flutter
        - flutter
      ignore_errors: yes

    - name: instructions for manual things to do
      shell:
        printf "\n 1.you can start android-studio using;
                \n /usr/local/android-studio/bin/studio.sh

                \n\n 2. accept android licenses using;
                \n flutter doctor --android-licenses

                \n\n 3. install dart/flutter plugins in android-studio;
                \n File>Settings>Plugins

                \n\n 4. select virtual device in android-studio;
                \n Tools>AVD Manager>create a device
                \n - if unsure; use pixel2 and oreo android version.
                \n - make sure graphics is set to Software. the other options are hardware, automatic
                \n  - save then
                \n  - run/launch the avd
                \n  - if you run; flutter devices then that avd should show up

                \n\n 5. run flutter doctor
                \n flutter doctor -v

                \n\n 6. create app
                \n flutter create hello

                \n\n 7. run app
                \n cd hello
                \n flutter run --enable-software-rendering --skia-deterministic-rendering --trace-startup --observatory-port 8111
                 "
